[{"path":"https://psrc.github.io/psrcelmer/articles/st_read_elmergeo.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"st_read_elmergeo","text":"following creates sf object county_layer polygon layer COUNTY_BACKGROUND ElmerGeo:","code":"library(psrcelmer) county_layer <- st_read_elmergeo('COUNTY_BACKGROUND')"},{"path":"https://psrc.github.io/psrcelmer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Peak. Author, maintainer. Michael Jensen. Author.","code":""},{"path":"https://psrc.github.io/psrcelmer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peak C, Jensen M (2022). psrcelmer: Provides streamlined methods retrieve data PSRC's databases Elmer ElmerGeo.. R package version 0.0.0.9000, https://psrc.github.io/psrcelmer/.","code":"@Manual{,   title = {psrcelmer: Provides streamlined methods to retrieve data from PSRC's databases Elmer and ElmerGeo.},   author = {Chris Peak and Michael Jensen},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://psrc.github.io/psrcelmer/}, }"},{"path":"https://psrc.github.io/psrcelmer/index.html","id":"psrcelmer","dir":"","previous_headings":"","what":"Provides streamlined methods to retrieve data from PSRC's databases Elmer and ElmerGeo.","title":"Provides streamlined methods to retrieve data from PSRC's databases Elmer and ElmerGeo.","text":"R utilities interacting Elmer ElmerGeo","code":""},{"path":"https://psrc.github.io/psrcelmer/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation Instructions","title":"Provides streamlined methods to retrieve data from PSRC's databases Elmer and ElmerGeo.","text":"Install following command: devtools::install_github(\"psrc/psrcelmer\") Load package library(psrcelmer)","code":""},{"path":"https://psrc.github.io/psrcelmer/index.html","id":"package-contents","dir":"","previous_headings":"","what":"Package Contents","title":"Provides streamlined methods to retrieve data from PSRC's databases Elmer and ElmerGeo.","text":"present, includes one user-accessible function st_read_elmergeo(). information , run command ?st_read_elmergeo loading package.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_query.html","id":null,"dir":"Reference","previous_headings":"","what":"get_query(db_name, sql) — get_query","title":"get_query(db_name, sql) — get_query","text":"Retrieve dataset defined SQL string","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_query(db_name, sql) — get_query","text":"","code":"get_query(db_name = \"Elmer\", sql)"},{"path":"https://psrc.github.io/psrcelmer/reference/get_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_query(db_name, sql) — get_query","text":"db_name name database run query .  \"Elmer\" \"ElmerGeo\".  Default = \"Elmer\". sql SQL command send <db_name>.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_query(db_name, sql) — get_query","text":"data frame.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_query(db_name, sql) — get_query","text":"","code":"get_query(\"select * from chas.tenure_dim\") #> An error happened in get_conn: Error: nanodbc/nanodbc.cpp:1021: 42000: [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Login failed for user 'PSRC\\CPeak'.  [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Cannot open database \"select * from chas.tenure_dim\" requested by the login. The login failed.  #>  #> An error happened in get_query: Error in h(simpleError(msg, call)): error in evaluating the argument 'statement' in selecting a method for function 'dbGetQuery': argument \"sql\" is missing, with no default #>  #> Error in h(simpleError(msg, call)): error in evaluating the argument 'statement' in selecting a method for function 'dbGetQuery': argument \"sql\" is missing, with no default get_query(db_name = \"ElmerGeo\", sql = \"select geoid10 from dbo.TRACT2010\") #>         geoid10 #> 1   53033022006 #> 2   53033032320 #> 3   53033031703 #> 4   53033031206 #> 5   53033032102 #> 6   53033032210 #> 7   53033032211 #> 8   53033032104 #> 9   53033032313 #> 10  53033032203 #> 11  53033032703 #> 12  53033032704 #> 13  53033027300 #> 14  53033027200 #> 15  53033027100 #> 16  53033027000 #> 17  53033026802 #> 18  53033026801 #> 19  53033026700 #> 20  53033026600 #> 21  53033000800 #> 22  53033000700 #> 23  53033000600 #> 24  53033000500 #> 25  53033000402 #> 26  53033000401 #> 27  53033000300 #> 28  53033000200 #> 29  53033000100 #> 30  53033990100 #> 31  53033032500 #> 32  53033031907 #> 33  53033031800 #> 34  53033032002 #> 35  53033032003 #> 36  53033031704 #> 37  53033032005 #> 38  53033032006 #> 39  53033032207 #> 40  53033021803 #> 41  53033032602 #> 42  53033032702 #> 43  53033032800 #> 44  53033026500 #> 45  53033026400 #> 46  53033026300 #> 47  53033026200 #> 48  53033026100 #> 49  53033026001 #> 50  53033021500 #> 51  53033021400 #> 52  53033021300 #> 53  53033001702 #> 54  53033004302 #> 55  53033004301 #> 56  53033007402 #> 57  53033010002 #> 58  53033010001 #> 59  53033011002 #> 60  53033010402 #> 61  53033010702 #> 62  53033011402 #> 63  53033022605 #> 64  53033022902 #> 65  53033024602 #> 66  53033025803 #> 67  53033031601 #> 68  53033031603 #> 69  53033032103 #> 70  53033025001 #> 71  53033032401 #> 72  53033032402 #> 73  53033031501 #> 74  53033021100 #> 75  53033021000 #> 76  53033020900 #> 77  53033020800 #> 78  53033020700 #> 79  53033020600 #> 80  53033020500 #> 81  53033011401 #> 82  53033025302 #> 83  53033025806 #> 84  53033027701 #> 85  53033032326 #> 86  53033032327 #> 87  53033023404 #> 88  53033023403 #> 89  53033023804 #> 90  53033023201 #> 91  53033023900 #> 92  53033032322 #> 93  53033032321 #> 94  53033021804 #> 95  53033022101 #> 96  53033025003 #> 97  53033022701 #> 98  53033032008 #> 99  53033032208 #> 100 53033020402 #> 101 53033020401 #> 102 53033020300 #> 103 53033020200 #> 104 53033020100 #> 105 53033012100 #> 106 53033023803 #> 107 53033025006 #> 108 53033025005 #> 109 53033025602 #> 110 53033029206 #> 111 53033029102 #> 112 53033029101 #> 113 53033030006 #> 114 53033030314 #> 115 53033030313 #> 116 53033031605 #> 117 53033024100 #> 118 53033022703 #> 119 53033024200 #> 120 53033022203 #> 121 53033024800 #> 122 53033024902 #> 123 53033024903 #> 124 53033025102 #> 125 53033031903 #> 126 53033031904 #> 127 53033031906 #> 128 53033031301 #> 129 53033031100 #> 130 53033031000 #> 131 53033030902 #> 132 53033030901 #> 133 53033030802 #> 134 53033030801 #> 135 53033012000 #> 136 53033011900 #> 137 53033010900 #> 138 53033010800 #> 139 53033010600 #> 140 53033010500 #> 141 53033010300 #> 142 53033031604 #> 143 53033032011 #> 144 53033031706 #> 145 53033032215 #> 146 53033032329 #> 147 53033032328 #> 148 53033001701 #> 149 53033007401 #> 150 53033032317 #> 151 53033032315 #> 152 53033032319 #> 153 53033021906 #> 154 53033021905 #> 155 53033032307 #> 156 53033032311 #> 157 53033032324 #> 158 53033022801 #> 159 53033030700 #> 160 53033030600 #> 161 53033030504 #> 162 53033030503 #> 163 53033030501 #> 164 53033030404 #> 165 53033010200 #> 166 53033010100 #> 167 53033009900 #> 168 53033009800 #> 169 53033009702 #> 170 53033009701 #> 171 53033009600 #> 172 53033010401 #> 173 53033010701 #> 174 53033011001 #> 175 53033025301 #> 176 53033025601 #> 177 53033025805 #> 178 53033022803 #> 179 53033023202 #> 180 53033031205 #> 181 53033031502 #> 182 53033022005 #> 183 53033021802 #> 184 53033021904 #> 185 53033030403 #> 186 53033030401 #> 187 53033030312 #> 188 53033030311 #> 189 53033030310 #> 190 53033009500 #> 191 53033009400 #> 192 53033009300 #> 193 53033009200 #> 194 53033009100 #> 195 53033009000 #> 196 53033008900 #> 197 53033008800 #> 198 53033029205 #> 199 53033030005 #> 200 53033031705 #> 201 53033032010 #> 202 53033032213 #> 203 53033032214 #> 204 53033022300 #> 205 53033022400 #> 206 53033022901 #> 207 53033022606 #> 208 53033022702 #> 209 53033023000 #> 210 53033030309 #> 211 53033030308 #> 212 53033030306 #> 213 53033030305 #> 214 53033008700 #> 215 53033011800 #> 216 53033011700 #> 217 53033011600 #> 218 53033011500 #> 219 53033011300 #> 220 53033011200 #> 221 53033011102 #> 222 53033032212 #> 223 53033023100 #> 224 53033023603 #> 225 53033023300 #> 226 53033023401 #> 227 53033023500 #> 228 53033030304 #> 229 53033030202 #> 230 53033030201 #> 231 53033030100 #> 232 53033030004 #> 233 53033030003 #> 234 53033011101 #> 235 53033008600 #> 236 53033008500 #> 237 53033008400 #> 238 53033008300 #> 239 53033008200 #> 240 53033008100 #> 241 53033008002 #> 242 53033008001 #> 243 53033007900 #> 244 53033007800 #> 245 53033007700 #> 246 53033023601 #> 247 53033024601 #> 248 53033023604 #> 249 53033023700 #> 250 53033029902 #> 251 53033029901 #> 252 53033029802 #> 253 53033029801 #> 254 53033029700 #> 255 53033029602 #> 256 53033029601 #> 257 53033029504 #> 258 53033007600 #> 259 53033007500 #> 260 53033007300 #> 261 53033007200 #> 262 53033007100 #> 263 53033007000 #> 264 53033006900 #> 265 53033006800 #> 266 53033006700 #> 267 53033006600 #> 268 53033006500 #> 269 53033023801 #> 270 53033024000 #> 271 53033024701 #> 272 53033024901 #> 273 53033024702 #> 274 53033021700 #> 275 53033022001 #> 276 53033029503 #> 277 53033029502 #> 278 53033029408 #> 279 53033029407 #> 280 53033029406 #> 281 53033029405 #> 282 53033006400 #> 283 53033006300 #> 284 53033006200 #> 285 53033006100 #> 286 53033006000 #> 287 53033005801 #> 288 53033005700 #> 289 53033026002 #> 290 53033025804 #> 291 53033031909 #> 292 53033031908 #> 293 53033022102 #> 294 53033022500 #> 295 53033029403 #> 296 53033029307 #> 297 53033029306 #> 298 53033028902 #> 299 53033028901 #> 300 53033028802 #> 301 53033028801 #> 302 53033005600 #> 303 53033005400 #> 304 53033005302 #> 305 53033005301 #> 306 53033005200 #> 307 53033005100 #> 308 53033005000 #> 309 53033004900 #> 310 53033004800 #> 311 53033004700 #> 312 53033022603 #> 313 53033022604 #> 314 53033024300 #> 315 53033024400 #> 316 53033024500 #> 317 53033028700 #> 318 53033028600 #> 319 53033028500 #> 320 53033028403 #> 321 53033028402 #> 322 53033028300 #> 323 53033004600 #> 324 53033004500 #> 325 53033004400 #> 326 53033004200 #> 327 53033004100 #> 328 53033004000 #> 329 53033003900 #> 330 53033003800 #> 331 53033025701 #> 332 53033022802 #> 333 53033032309 #> 334 53033032325 #> 335 53033028200 #> 336 53033028100 #> 337 53033028000 #> 338 53033027900 #> 339 53033027800 #> 340 53033027702 #> 341 53033005900 #> 342 53033005802 #> 343 53033003600 #> 344 53033003500 #> 345 53033003400 #> 346 53033003300 #> 347 53033003200 #> 348 53033003100 #> 349 53033025400 #> 350 53033025500 #> 351 53033025702 #> 352 53033032316 #> 353 53033032318 #> 354 53033031202 #> 355 53033031204 #> 356 53033031302 #> 357 53033032601 #> 358 53033027600 #> 359 53033029305 #> 360 53033029304 #> 361 53033029303 #> 362 53033029204 #> 363 53033003000 #> 364 53033002900 #> 365 53033002800 #> 366 53033002700 #> 367 53033002600 #> 368 53033002500 #> 369 53033002400 #> 370 53033002200 #> 371 53033002100 #> 372 53033002000 #> 373 53033031400 #> 374 53033032007 #> 375 53033025101 #> 376 53033025200 #> 377 53033022003 #> 378 53033022201 #> 379 53033029203 #> 380 53033029004 #> 381 53033029003 #> 382 53033029001 #> 383 53033027500 #> 384 53033027400 #> 385 53033001900 #> 386 53033001800 #> 387 53033001600 #> 388 53033001500 #> 389 53033001400 #> 390 53033001300 #> 391 53033001200 #> 392 53033001100 #> 393 53033001000 #> 394 53033000900 #> 395 53033022202 #> 396 53033032323 #> 397 53033021600 #> 398 53033021903 #> 399 53035090700 #> 400 53035090800 #> 401 53035090900 #> 402 53035091000 #> 403 53035080101 #> 404 53035080102 #> 405 53035080200 #> 406 53035080300 #> 407 53035080400 #> 408 53035080600 #> 409 53035080700 #> 410 53035092801 #> 411 53035091204 #> 412 53035091302 #> 413 53035091400 #> 414 53035091500 #> 415 53035091600 #> 416 53035091700 #> 417 53035091800 #> 418 53035092000 #> 419 53035080500 #> 420 53035080900 #> 421 53035081000 #> 422 53035081100 #> 423 53035081200 #> 424 53035081400 #> 425 53035091301 #> 426 53035091201 #> 427 53035091203 #> 428 53035091900 #> 429 53035090101 #> 430 53035090102 #> 431 53035092100 #> 432 53035092200 #> 433 53035092400 #> 434 53035092500 #> 435 53035092600 #> 436 53035092901 #> 437 53035092300 #> 438 53035090300 #> 439 53035090400 #> 440 53035940100 #> 441 53035940000 #> 442 53035091100 #> 443 53035080800 #> 444 53035092802 #> 445 53035092803 #> 446 53035092902 #> 447 53035090202 #> 448 53035090502 #> 449 53035090201 #> 450 53035090501 #> 451 53035092704 #> 452 53035092701 #> 453 53035990100 #> 454 53053062000 #> 455 53053071601 #> 456 53053073111 #> 457 53053940007 #> 458 53053940006 #> 459 53053073116 #> 460 53053072800 #> 461 53053072107 #> 462 53053071703 #> 463 53053073113 #> 464 53053072506 #> 465 53053071411 #> 466 53053071410 #> 467 53053072308 #> 468 53053940010 #> 469 53053071409 #> 470 53053073302 #> 471 53053071803 #> 472 53053073115 #> 473 53053072106 #> 474 53053072105 #> 475 53053062600 #> 476 53053073200 #> 477 53053072410 #> 478 53053073110 #> 479 53053073108 #> 480 53053071902 #> 481 53053072307 #> 482 53053072311 #> 483 53053072109 #> 484 53053072407 #> 485 53053073001 #> 486 53053070100 #> 487 53053073006 #> 488 53053070206 #> 489 53053071506 #> 490 53053071504 #> 491 53053070309 #> 492 53053063501 #> 493 53053071901 #> 494 53053062900 #> 495 53053063000 #> 496 53053070401 #> 497 53053063502 #> 498 53053072405 #> 499 53053061200 #> 500 53053073404 #> 501 53053073005 #> 502 53053072504 #> 503 53053072309 #> 504 53053060300 #> 505 53053071706 #> 506 53053071705 #> 507 53053071704 #> 508 53053072408 #> 509 53053071403 #> 510 53053070207 #> 511 53053071209 #> 512 53053072406 #> 513 53053061601 #> 514 53053061800 #> 515 53053072603 #> 516 53053072602 #> 517 53053072601 #> 518 53053061500 #> 519 53053072503 #> 520 53053061300 #> 521 53053061700 #> 522 53053070307 #> 523 53053061602 #> 524 53053070308 #> 525 53053072305 #> 526 53053062801 #> 527 53053071210 #> 528 53053071307 #> 529 53053062802 #> 530 53053063400 #> 531 53053072108 #> 532 53053071408 #> 533 53053073114 #> 534 53053071503 #> 535 53053061400 #> 536 53053940002 #> 537 53053072313 #> 538 53053071806 #> 539 53053062500 #> 540 53053072111 #> 541 53053072112 #> 542 53053940011 #> 543 53053071805 #> 544 53053060600 #> 545 53053061100 #> 546 53053072312 #> 547 53053071808 #> 548 53053071807 #> 549 53053073123 #> 550 53053070404 #> 551 53053070403 #> 552 53053070313 #> 553 53053070314 #> 554 53053070315 #> 555 53053070316 #> 556 53053073125 #> 557 53053072903 #> 558 53053071407 #> 559 53053060800 #> 560 53053073119 #> 561 53053072507 #> 562 53053072409 #> 563 53053071406 #> 564 53053073126 #> 565 53053073408 #> 566 53053073406 #> 567 53053073121 #> 568 53053071310 #> 569 53053071309 #> 570 53053072906 #> 571 53053940004 #> 572 53053071206 #> 573 53053062300 #> 574 53053060200 #> 575 53053060904 #> 576 53053061002 #> 577 53053061001 #> 578 53053070312 #> 579 53053940003 #> 580 53053073120 #> 581 53053073122 #> 582 53053073405 #> 583 53053073407 #> 584 53053073124 #> 585 53053070703 #> 586 53053071306 #> 587 53053073301 #> 588 53053060700 #> 589 53053072310 #> 590 53053072000 #> 591 53053073118 #> 592 53053072905 #> 593 53053072907 #> 594 53053073500 #> 595 53053061900 #> 596 53053070310 #> 597 53053072901 #> 598 53053071602 #> 599 53053071305 #> 600 53053073117 #> 601 53053072505 #> 602 53053940005 #> 603 53053060500 #> 604 53053060905 #> 605 53053060906 #> 606 53053060903 #> 607 53053060400 #> 608 53053063100 #> 609 53053070205 #> 610 53053071207 #> 611 53053063200 #> 612 53053071505 #> 613 53053070311 #> 614 53053940009 #> 615 53053940008 #> 616 53053070204 #> 617 53053071304 #> 618 53053071707 #> 619 53053070203 #> 620 53053071100 #> 621 53053940001 #> 622 53053071205 #> 623 53053071208 #> 624 53053062400 #> 625 53053063300 #> 626 53061041810 #> 627 53061051924 #> 628 53061051922 #> 629 53061051921 #> 630 53061051926 #> 631 53061052115 #> 632 53061052114 #> 633 53061052209 #> 634 53061052709 #> 635 53061053604 #> 636 53061053603 #> 637 53061052906 #> 638 53061053508 #> 639 53061052905 #> 640 53061041809 #> 641 53061051928 #> 642 53061041303 #> 643 53061051923 #> 644 53061051925 #> 645 53061052208 #> 646 53061052708 #> 647 53061053507 #> 648 53061053509 #> 649 53061040500 #> 650 53061052003 #> 651 53061052118 #> 652 53061990100 #> 653 53061041304 #> 654 53061990002 #> 655 53061041704 #> 656 53061051927 #> 657 53061041703 #> 658 53061041606 #> 659 53061040900 #> 660 53061041608 #> 661 53061041601 #> 662 53061041806 #> 663 53061041905 #> 664 53061041904 #> 665 53061041701 #> 666 53061041811 #> 667 53061052706 #> 668 53061052707 #> 669 53061051804 #> 670 53061051803 #> 671 53061041812 #> 672 53061053602 #> 673 53061040700 #> 674 53061041903 #> 675 53061052206 #> 676 53061041301 #> 677 53061053505 #> 678 53061053700 #> 679 53061042001 #> 680 53061042003 #> 681 53061050200 #> 682 53061050500 #> 683 53061050600 #> 684 53061050700 #> 685 53061051000 #> 686 53061041400 #> 687 53061041607 #> 688 53061041000 #> 689 53061051913 #> 690 53061051100 #> 691 53061051300 #> 692 53061051400 #> 693 53061051500 #> 694 53061051701 #> 695 53061051601 #> 696 53061052603 #> 697 53061052203 #> 698 53061051905 #> 699 53061051916 #> 700 53061052007 #> 701 53061051917 #> 702 53061052005 #> 703 53061050300 #> 704 53061050401 #> 705 53061050402 #> 706 53061050800 #> 707 53061051914 #> 708 53061052604 #> 709 53061052607 #> 710 53061052903 #> 711 53061053302 #> 712 53061053301 #> 713 53061053201 #> 714 53061050900 #> 715 53061042004 #> 716 53061051702 #> 717 53061051915 #> 718 53061051802 #> 719 53061052004 #> 720 53061051200 #> 721 53061042005 #> 722 53061052006 #> 723 53061040200 #> 724 53061040100 #> 725 53061040300 #> 726 53061040800 #> 727 53061040400 #> 728 53061041202 #> 729 53061041201 #> 730 53061041100 #> 731 53061041500 #> 732 53061041805 #> 733 53061051602 #> 734 53061042006 #> 735 53061052606 #> 736 53061052605 #> 737 53061051912 #> 738 53061052401 #> 739 53061052107 #> 740 53061052108 #> 741 53061052904 #> 742 53061041605 #> 743 53061052207 #> 744 53061052204 #> 745 53061053802 #> 746 53061041901 #> 747 53061052104 #> 748 53061052105 #> 749 53061052301 #> 750 53061052302 #> 751 53061052504 #> 752 53061052503 #> 753 53061052705 #> 754 53061052502 #> 755 53061053102 #> 756 53061053101 #> 757 53061053202 #> 758 53061053400 #> 759 53061053504 #> 760 53061052701 #> 761 53061052806 #> 762 53061052803 #> 763 53061052804 #> 764 53061940001 #> 765 53061940002 #> 766 53061053506 #> 767 53061053801 #> 768 53061053803 #> 769 53061050102 #> 770 53061050101 #> 771 53061051918 #> 772 53061052112 #> 773 53061052113 #> 774 53061052402 #> 775 53061052805 #> 776 53061041808"},{"path":"https://psrc.github.io/psrcelmer/reference/get_table.html","id":null,"dir":"Reference","previous_headings":"","what":"get_table(db_name, tbl_name) — get_table","title":"get_table(db_name, tbl_name) — get_table","text":"Retrieve dataset defined table name.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_table(db_name, tbl_name) — get_table","text":"","code":"get_table(db_name = \"Elmer\", schema, tbl_name)"},{"path":"https://psrc.github.io/psrcelmer/reference/get_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_table(db_name, tbl_name) — get_table","text":"db_name String.  name database run query .  \"Elmer\" \"ElmerGeo\".  Default = \"Elmer\". schema String.  name schema table exists .  default. tbl_name String.  name table retrieved.  default.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_table(db_name, tbl_name) — get_table","text":"data frame.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/get_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_table(db_name, tbl_name) — get_table","text":"","code":"get_table('chas', 'tenure_dim') #> An error happened in get_table: Error in eval(parse(text = text, keep.source = FALSE), envir): argument \"tbl_name\" is missing, with no default #>  #> Error in eval(parse(text = text, keep.source = FALSE), envir): argument \"tbl_name\" is missing, with no default"},{"path":"https://psrc.github.io/psrcelmer/reference/st_read_elmergeo.html","id":null,"dir":"Reference","previous_headings":"","what":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","title":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","text":"read simple features PSRC's -house geodatabase #' function preferable sf::st_read() pulling Elmer ElmerGeo, avoids incompatibilities SQL Server's data types R's.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/st_read_elmergeo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","text":"","code":"st_read_elmergeo(layer_name, schema_name = \"dbo\", project_to_wgs84 = TRUE)"},{"path":"https://psrc.github.io/psrcelmer/reference/st_read_elmergeo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","text":"layer_name name feature layer geodatabase table schema_name name schema layer_name exists .  Defaults \"dbo\", standard schema ElmerGeo tables project_to_wgs84 (TRUE/FALSE) TRUE deliver output WGS84 projection, otherwise NAD84 / WA State Plane North.  Defaults TRUE.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/st_read_elmergeo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","text":"object class sf","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/st_read_elmergeo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","text":"layer set ESRI versioned layer geodatabase, function returns versioned view (exists SQL Server \"_evw\" suffix).  set way, returns base table.","code":""},{"path":"https://psrc.github.io/psrcelmer/reference/st_read_elmergeo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"st_read_elmergeo(layer_name, ...) — st_read_elmergeo","text":"","code":"st_read_elmergeo(\"COUNTY_BACKGROUND\") #> Simple feature collection with 39 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -124.8363 ymin: 45.54373 xmax: -116.9152 ymax: 49.00253 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    OBJECTID perimeter county_cod county_fip county_nm psrc SDE_STATE_ID #> 1        23 1287929.0         38        075   Whitman    0            0 #> 2         3 1291742.0         10        019     Ferry    0            0 #> 3        26 1702496.0         39        077    Yakima    0            0 #> 4         6  601010.2         28        055  San Juan    0            0 #> 5        29  962960.1         11        021  Franklin    0            0 #> 6         9 1788454.0          4        007    Chelan    0            0 #> 7        15  631297.4         18        035    Kitsap    1            0 #> 8        32  796659.6          7        013  Columbia    0            0 #> 9        12 1197390.0         31        061 Snohomish    1            0 #> 10       35  416193.8         35        069 Wahkiakum    0            0 #>                             Shape #> 1  POLYGON ((-117.0403 47.2592... #> 2  POLYGON ((-118.8366 49.0001... #> 3  POLYGON ((-121.4076 47.0006... #> 4  POLYGON ((-123.0084 48.8296... #> 5  POLYGON ((-118.2102 46.7388... #> 6  POLYGON ((-120.7021 48.5317... #> 7  POLYGON ((-122.4983 47.9266... #> 8  POLYGON ((-118.2286 46.5933... #> 9  POLYGON ((-122.4583 48.2977... #> 10 POLYGON ((-123.2184 46.3850...  st_read_elmergeo(\"COUNTY_BACKGROUND\", project_to_wgs84 = FALSE) #> Simple feature collection with 39 features and 7 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 664166.8 ymin: -527832.4 xmax: 2636448 ymax: 751796.4 #> Projected CRS: NAD83 / Washington North (ftUS) #> First 10 features: #>    OBJECTID perimeter county_cod county_fip county_nm psrc SDE_STATE_ID #> 1        23 1287929.0         38        075   Whitman    0            0 #> 2         3 1291742.0         10        019     Ferry    0            0 #> 3        26 1702496.0         39        077    Yakima    0            0 #> 4         6  601010.2         28        055  San Juan    0            0 #> 5        29  962960.1         11        021  Franklin    0            0 #> 6         9 1788454.0          4        007    Chelan    0            0 #> 7        15  631297.4         18        035    Kitsap    1            0 #> 8        32  796659.6          7        013  Columbia    0            0 #> 9        12 1197390.0         31        061 Snohomish    1            0 #> 10       35  416193.8         35        069 Wahkiakum    0            0 #>                             Shape #> 1  POLYGON ((2581969 117791.3,... #> 2  POLYGON ((2119733 735853.9,... #> 3  POLYGON ((1497107 772.0603,... #> 4  POLYGON ((1116546 674848.3,... #> 5  POLYGON ((2298154 -84060.12... #> 6  POLYGON ((1672219 558791.7,... #> 7  POLYGON ((1232246 342417.9,... #> 8  POLYGON ((2295340 -137255.1... #> 9  POLYGON ((1244905 477543.5,... #> 10 POLYGON ((1038351 -214998.9..."}]
